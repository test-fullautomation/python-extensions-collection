************************************************************************************************************************
Copyright 2020-2023 Robert Bosch GmbH

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
------------------------------------------------------------------------------------------------------------------------
Test Use Cases
------------------------------------------------------------------------------------------------------------------------
Test PEC_0001 / CFILE / GOODCASE
Description: Write and Read with explicit Close
Expectation: Teststring is written to file and read from this file
------------------------------------------------------------------------------------------------------------------------
Test PEC_0002 / CFILE / GOODCASE
Description: Write and Read without explicit Close
Expectation: Teststring is written to file and read from this file
------------------------------------------------------------------------------------------------------------------------
Test PEC_0003 / CFILE / GOODCASE
Description: Delete a file
Expectation: File is deleted
------------------------------------------------------------------------------------------------------------------------
Test PEC_0004 / CFILE / GOODCASE
Description: Append and Read with explicit Close
Expectation: Lines are appended and read
------------------------------------------------------------------------------------------------------------------------
Test PEC_0005 / CFILE / GOODCASE
Description: Append and Read without explicit Close
Expectation: Lines are appended and read
------------------------------------------------------------------------------------------------------------------------
Test PEC_0006 / CFILE / GOODCASE
Description: Write to new file; repeated ReadLines with filter
Expectation: Lines are read depending on filter settings
------------------------------------------------------------------------------------------------------------------------
Test PEC_0007 / CFILE / GOODCASE
Description: ReadLines; skip blank lines
Expectation: Lines are read depending on filter settings
------------------------------------------------------------------------------------------------------------------------
Test PEC_0008 / CFILE / GOODCASE
Description: Write, Append and ReadLines combinations
Expectation: Lines are read depending on previous Write or Append
------------------------------------------------------------------------------------------------------------------------
Test PEC_0009 / CFILE / GOODCASE
Description: Write and ReadLines of composite data types: list, tuple, set and dict
Expectation: Content of composite data is resolved and written to file line by line separately
------------------------------------------------------------------------------------------------------------------------
Test PEC_0010 / CFILE / GOODCASE
Description: Write: Prefix and additional vertical space
Expectation: Prefix and additional vertical space are added to written content
------------------------------------------------------------------------------------------------------------------------
Test PEC_0011 / CFILE / GOODCASE
Description: CopyTo, MoveTo and GetFileInfo
Expectation: File is copied, moved and file info is correct
------------------------------------------------------------------------------------------------------------------------
Test PEC_0012 / CFILE / GOODCASE
Description: ConfirmDelete
Expectation: Returns True or False depending on deletion has to be confirmed or not
------------------------------------------------------------------------------------------------------------------------
Test PEC_0050 / CFILE / BADCASE
Description: Path to source file does not exist
Expectation: Source file not written, not deleted, not copied, not moved
------------------------------------------------------------------------------------------------------------------------
Test PEC_0051 / CFILE / BADCASE
Description: Path to destination file does not exist
Expectation: Source file not copied and not moved to destination
------------------------------------------------------------------------------------------------------------------------
Test PEC_0052 / CFILE / BADCASE
Description: source file == destination file
Expectation: Source file not copied and not moved to destination
------------------------------------------------------------------------------------------------------------------------
Test PEC_0053 / CFILE / BADCASE
Description: bOverwrite and access violations
Expectation: Existing files are not overwritten, if not allowed; no multiple class instances pointing to the same file
------------------------------------------------------------------------------------------------------------------------
Test PEC_0100 / CFOLDER / GOODCASE
Description: Create a folder, bOverwrite=False
Expectation: New folder is created, but existing folder is not overwritten
------------------------------------------------------------------------------------------------------------------------
Test PEC_0101 / CFOLDER / GOODCASE
Description: Create a folder, bOverwrite=True
Expectation: New folder is created, existing folder is overwritten
------------------------------------------------------------------------------------------------------------------------
Test PEC_0102 / CFOLDER / GOODCASE
Description: Create and delete a folder, bRecursive=True
Expectation: Entire path to folder is created; folder is deleted
------------------------------------------------------------------------------------------------------------------------
Test PEC_0103 / CFOLDER / GOODCASE
Description: Delete a folder with content write protected
Expectation: Write protection is removed, folder is deleted
------------------------------------------------------------------------------------------------------------------------
Test PEC_0104 / CFOLDER / GOODCASE
Description: Copy a folder
Expectation: Folder is copied
------------------------------------------------------------------------------------------------------------------------
Test PEC_0105 / CFOLDER / GOODCASE
Description: Copy a folder, destination folder already exists
Expectation: Destination folder is overwritten or not, depending on bOverwrite
------------------------------------------------------------------------------------------------------------------------
Test PEC_0150 / CFOLDER / BADCASE
Description: Copy a folder, source and destination are same folder
Expectation: Nothing is copied; error message
------------------------------------------------------------------------------------------------------------------------
Test PEC_0151 / CFOLDER / BADCASE
Description: Copy a folder, destination path does not exist
Expectation: Nothing is copied; error message
------------------------------------------------------------------------------------------------------------------------
Test PEC_0152 / CFOLDER / BADCASE
Description: Copy a folder, destination folder already in use by another instance
Expectation: Nothing is copied; error message
------------------------------------------------------------------------------------------------------------------------
Test PEC_0153 / CFOLDER / BADCASE
Description: Copy a folder, source folder does not exist
Expectation: Nothing is copied; error message
------------------------------------------------------------------------------------------------------------------------
Test PEC_0154 / CFOLDER / BADCASE
Description: Create a folder, bOverwrite=True, open file handle
Expectation: Windows: Access violation; not possible to delete the folder (BADCASE) / Linux: Folder is deleted (GOODCASE)
Hint.......: Platform specific; under Windows test needs some seconds (because of an internal loop of tries)
------------------------------------------------------------------------------------------------------------------------
Test PEC_0155 / CFOLDER / BADCASE
Description: Multiple CFolder instances of same folder
Expectation: Error message
------------------------------------------------------------------------------------------------------------------------
Test PEC_0200 / CSTRING / GOODCASE
Description: NormalizePath: Resolve environment variables
Expectation: String with resolved environment variable is not expected to be the same as the input string
------------------------------------------------------------------------------------------------------------------------
Test PEC_0201 / CSTRING / GOODCASE
Description: NormalizePath: Resolving of environment variables deactivated
Expectation: String with environment variable is returned unresolved
------------------------------------------------------------------------------------------------------------------------
Test PEC_0202 / CSTRING / GOODCASE
Description: NormalizePath: Convert backslashes
Expectation: All backslashes replaced by single slashes
------------------------------------------------------------------------------------------------------------------------
Test PEC_0203 / CSTRING / GOODCASE
Description: NormalizePath: Strip surrounding quotes and spaces
Expectation: Surrounding quotes and spaces are removed
------------------------------------------------------------------------------------------------------------------------
Test PEC_0204 / CSTRING / GOODCASE
Description: NormalizePath: Path with redundant path separators
Expectation: Redundant path separators removed; all backslashes replaced by single slashes
------------------------------------------------------------------------------------------------------------------------
Test PEC_0205 / CSTRING / GOODCASE
Description: NormalizePath: Path with redundant path separators; bWin=True
Expectation: Redundant path separators removed; remaining separators are masked backslashes
------------------------------------------------------------------------------------------------------------------------
Test PEC_0206 / CSTRING / GOODCASE
Description: NormalizePath: Path with up-level references
Expectation: All backslashes replaced by single slashes; up-level references resolved
------------------------------------------------------------------------------------------------------------------------
Test PEC_0207 / CSTRING / GOODCASE
Description: NormalizePath: Path with up-level references; bWin=True
Expectation: All slashes replaced by double (masked) backslashes; up-level references resolved
------------------------------------------------------------------------------------------------------------------------
Test PEC_0208 / CSTRING / GOODCASE
Description: NormalizePath: Path with up-level references; bWin=True; bMask=False
Expectation: All slashes replaced by single (unmasked) backslashes; up-level references resolved
------------------------------------------------------------------------------------------------------------------------
Test PEC_0209 / CSTRING / GOODCASE
Description: NormalizePath: Relative input path with absolute reference path
Expectation: Resulting absolute path is a merge of the absolute reference path and the relative input path; single slashes as separator
------------------------------------------------------------------------------------------------------------------------
Test PEC_0210 / CSTRING / GOODCASE
Description: NormalizePath: Relative input path with absolute reference path; bWin=True; bMask=True
Expectation: Resulting absolute path is a merge of the absolute reference path and the relative input path; masked backslashes as separator
------------------------------------------------------------------------------------------------------------------------
Test PEC_0211 / CSTRING / GOODCASE
Description: NormalizePath: Path with blanks inside; bConsiderBlanks=True
Expectation: Paths with blanks inside are encapsulated in quotes; single slashes as separator; up-level references resolved
------------------------------------------------------------------------------------------------------------------------
Test PEC_0212 / CSTRING / GOODCASE
Description: NormalizePath: Path without blanks inside; bConsiderBlanks=True
Expectation: Paths without blanks inside are not encapsulated in quotes; single slashes as separator
------------------------------------------------------------------------------------------------------------------------
Test PEC_0213 / CSTRING / GOODCASE
Description: NormalizePath: Local network resource paths
Expectation: Resulting local network resource path contains single slashes as separator
------------------------------------------------------------------------------------------------------------------------
Test PEC_0214 / CSTRING / GOODCASE
Description: NormalizePath: Local network resource paths in web browser format
Expectation: Resulting local network resource path (web browser format) contains single slashes as separator; bWin has no effect
------------------------------------------------------------------------------------------------------------------------
Test PEC_0215 / CSTRING / GOODCASE
Description: NormalizePath: Internet addresses
Expectation: Resulting internet address contains single backslashes as separator; bWin has no effect
------------------------------------------------------------------------------------------------------------------------
Generated: 14.08.2023 - 14:52:59

