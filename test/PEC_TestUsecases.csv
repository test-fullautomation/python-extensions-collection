sep=|
TESTID|SECTION|SUBSECTION|DESCRIPTION
PEC_0001|CFILE|GOODCASE|Write and Read with explicit Close
PEC_0002|CFILE|GOODCASE|Write and Read without explicit Close
PEC_0003|CFILE|GOODCASE|Delete a file
PEC_0004|CFILE|GOODCASE|Append and Read with explicit Close
PEC_0005|CFILE|GOODCASE|Append and Read without explicit Close
PEC_0006|CFILE|GOODCASE|Write to new file; repeated ReadLines with filter
PEC_0007|CFILE|GOODCASE|ReadLines; skip blank lines
PEC_0008|CFILE|GOODCASE|Write, Append and ReadLines combinations
PEC_0009|CFILE|GOODCASE|Write and ReadLines of composite data types: list, tuple, set and dict
PEC_0010|CFILE|GOODCASE|Write: Prefix and additional vertical space
PEC_0011|CFILE|GOODCASE|CopyTo, MoveTo and GetFileInfo
PEC_0012|CFILE|GOODCASE|ConfirmDelete
PEC_0050|CFILE|BADCASE|Path to source file does not exist
PEC_0051|CFILE|BADCASE|Path to destination file does not exist
PEC_0052|CFILE|BADCASE|source file == destination file
PEC_0053|CFILE|BADCASE|bOverwrite and access violations
PEC_0100|CFOLDER|GOODCASE|Create a folder, bOverwrite=False
PEC_0101|CFOLDER|GOODCASE|Create a folder, bOverwrite=True
PEC_0102|CFOLDER|GOODCASE|Create and delete a folder, bRecursive=True
PEC_0103|CFOLDER|GOODCASE|Delete a folder with content write protected
PEC_0104|CFOLDER|GOODCASE|Copy a folder
PEC_0105|CFOLDER|GOODCASE|Copy a folder, destination folder already exists
PEC_0150|CFOLDER|BADCASE|Copy a folder, source and destination are same folder
PEC_0151|CFOLDER|BADCASE|Copy a folder, destination path does not exist
PEC_0152|CFOLDER|BADCASE|Copy a folder, destination folder already in use by another instance
PEC_0153|CFOLDER|BADCASE|Copy a folder, source folder does not exist
PEC_0154|CFOLDER|BADCASE|Create a folder, bOverwrite=True, open file handle
PEC_0155|CFOLDER|BADCASE|Multiple CFolder instances of same folder
PEC_0200|CSTRING|GOODCASE|NormalizePath: Resolve environment variables
PEC_0201|CSTRING|GOODCASE|NormalizePath: Resolving of environment variables deactivated
PEC_0202|CSTRING|GOODCASE|NormalizePath: Convert backslashes
PEC_0203|CSTRING|GOODCASE|NormalizePath: Strip surrounding quotes and spaces
PEC_0204|CSTRING|GOODCASE|NormalizePath: Path with redundant path separators
PEC_0205|CSTRING|GOODCASE|NormalizePath: Path with redundant path separators; bWin=True
PEC_0206|CSTRING|GOODCASE|NormalizePath: Path with up-level references
PEC_0207|CSTRING|GOODCASE|NormalizePath: Path with up-level references; bWin=True
PEC_0208|CSTRING|GOODCASE|NormalizePath: Path with up-level references; bWin=True; bMask=False
PEC_0209|CSTRING|GOODCASE|NormalizePath: Relative input path with absolute reference path
PEC_0210|CSTRING|GOODCASE|NormalizePath: Relative input path with absolute reference path; bWin=True; bMask=True
PEC_0211|CSTRING|GOODCASE|NormalizePath: Path with blanks inside; bConsiderBlanks=True
PEC_0212|CSTRING|GOODCASE|NormalizePath: Path without blanks inside; bConsiderBlanks=True
PEC_0213|CSTRING|GOODCASE|NormalizePath: Local network resource paths
PEC_0214|CSTRING|GOODCASE|NormalizePath: Local network resource paths in web browser format
PEC_0215|CSTRING|GOODCASE|NormalizePath: Internet addresses
PEC_0300|CSTRING|GOODCASE|DetectParentPath: Search for a single folder
PEC_0301|CSTRING|GOODCASE|DetectParentPath: Search for two folders
PEC_0302|CSTRING|GOODCASE|DetectParentPath: Search for two folders; with one folder does not exist
PEC_0303|CSTRING|GOODCASE|DetectParentPath: Search for two folders; both folders do not exist
PEC_0304|CSTRING|GOODCASE|DetectParentPath: Search for a single folder; additionally search for a file
PEC_0305|CSTRING|GOODCASE|DetectParentPath: Search for a single folder; additionally search for a file
PEC_0400|CSTRING|GOODCASE|StringFilter: Skip blank strings
PEC_0401|CSTRING|GOODCASE|StringFilter: Blank strings not skipped
PEC_0402|CSTRING|GOODCASE|StringFilter: String commented out (1)
PEC_0403|CSTRING|GOODCASE|StringFilter: String commented out (2)
PEC_0404|CSTRING|GOODCASE|StringFilter: String commented out (3)
PEC_0405|CSTRING|GOODCASE|StringFilter: String commented out (4)
PEC_0406|CSTRING|GOODCASE|StringFilter: String commented out (5)
PEC_0407|CSTRING|GOODCASE|StringFilter: String commented out (6)
PEC_0408|CSTRING|GOODCASE|StringFilter: String starts with ...
PEC_0409|CSTRING|GOODCASE|StringFilter: String ends with ...
PEC_0410|CSTRING|GOODCASE|StringFilter: String starts not with ...
PEC_0411|CSTRING|GOODCASE|StringFilter: String ends not with ...
PEC_0412|CSTRING|GOODCASE|StringFilter: String contains ... (1)
PEC_0413|CSTRING|GOODCASE|StringFilter: String contains ... (2)
PEC_0414|CSTRING|GOODCASE|StringFilter: String contains ... and contains not ...
PEC_0415|CSTRING|GOODCASE|StringFilter: String contains not ...
PEC_0416|CSTRING|GOODCASE|StringFilter: Filter combinations; case sensitive
PEC_0417|CSTRING|GOODCASE|StringFilter: Filter combinations; not case sensitive
PEC_0418|CSTRING|GOODCASE|StringFilter: Inclusive by regular expression (1)
PEC_0419|CSTRING|GOODCASE|StringFilter: Inclusive by regular expression (2)
PEC_0420|CSTRING|GOODCASE|StringFilter: Filter combinations (1)
PEC_0421|CSTRING|GOODCASE|StringFilter: Filter combinations (2)
PEC_0422|CSTRING|GOODCASE|StringFilter: Filter combinations (3)
PEC_0423|CSTRING|GOODCASE|StringFilter: Filter combinations (4)
PEC_0424|CSTRING|GOODCASE|StringFilter: Exclusive by regular expression (1)
PEC_0425|CSTRING|GOODCASE|StringFilter: Exclusive by regular expression (2)
PEC_0426|CSTRING|GOODCASE|StringFilter: Filter combinations (5)
PEC_0427|CSTRING|GOODCASE|StringFilter: Filter combinations (6)
PEC_0428|CSTRING|GOODCASE|StringFilter: Filter combinations (7)
PEC_0429|CSTRING|GOODCASE|StringFilter: Filter combinations (8)
PEC_0430|CSTRING|GOODCASE|StringFilter: Handling of blanks (1)
PEC_0431|CSTRING|GOODCASE|StringFilter: Handling of blanks (2)
PEC_0432|CSTRING|GOODCASE|StringFilter: Filter string lists (1)
PEC_0433|CSTRING|GOODCASE|StringFilter: Filter string lists (2)
PEC_0434|CSTRING|GOODCASE|StringFilter: Filter string lists (3)
PEC_0435|CSTRING|GOODCASE|StringFilter: Filter string lists (4)
PEC_0436|CSTRING|GOODCASE|StringFilter: Filter string lists (5)
PEC_0437|CSTRING|GOODCASE|StringFilter: Filter string lists (6)
PEC_0438|CSTRING|GOODCASE|StringFilter: Filter string lists (7)
PEC_0500|CSTRING|GOODCASE|FormatResult: Success (1)
PEC_0501|CSTRING|GOODCASE|FormatResult: Success (2)
PEC_0502|CSTRING|GOODCASE|FormatResult: Error (1)
PEC_0503|CSTRING|GOODCASE|FormatResult: Error (2)
PEC_0504|CSTRING|GOODCASE|FormatResult: Exception (1)
PEC_0505|CSTRING|GOODCASE|FormatResult: Exception (2)
PEC_0600|CCOMPARISON|GOODCASE|Compare two files (with same content; no pattern)
PEC_0601|CCOMPARISON|GOODCASE|Compare two files (with different content; no pattern)
PEC_0602|CCOMPARISON|GOODCASE|Compare two files (with same content; with pattern)
PEC_0603|CCOMPARISON|GOODCASE|Compare two files (with different content; with pattern)
PEC_0604|CCOMPARISON|GOODCASE|Compare two files (with different content; with pattern and ignore pattern)
PEC_0650|CCOMPARISON|BADCASE|Compare two files (with same path and name)
PEC_0651|CCOMPARISON|BADCASE|Compare two files (first file not given)
PEC_0652|CCOMPARISON|BADCASE|Compare two files (second file not given)
PEC_0653|CCOMPARISON|BADCASE|Compare two files (first file not existing)
PEC_0654|CCOMPARISON|BADCASE|Compare two files (second file not existing)
PEC_0655|CCOMPARISON|BADCASE|Compare two files (pattern file not existing)
PEC_0656|CCOMPARISON|BADCASE|Compare two files (ignore pattern file not existing)
PEC_0700|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'int'
PEC_0701|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'float'
PEC_0702|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'str'
PEC_0703|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'bool'
PEC_0704|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'None'
PEC_0705|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'list'
PEC_0706|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'tuple'
PEC_0707|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'set'
PEC_0708|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'dict'
PEC_0709|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'dotdict'
PEC_0710|CUTILS|GOODCASE|PrettyPrint: Input parameter of nested types
PEC_0711|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'list'; output indented by 5 blanks
PEC_0712|CUTILS|GOODCASE|PrettyPrint: Input parameter of type 'list'; output indented by 2 blanks and with prefix
PEC_0713|CUTILS|GOODCASE|PrettyPrint: Input parameter of nested types; output indented by 2 blanks and with prefix; strings in hexadecimal format
PEC_0800|CUTILS|GOODCASE|GetInstalledPackages: Default usage
PEC_0801|CUTILS|GOODCASE|GetInstalledPackages: List written to output file
